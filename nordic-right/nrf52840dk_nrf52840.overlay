// To get started, press Ctrl+Space to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https://docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https://nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html

&pinctrl {
	uart1_default: uart1_default {
		group1 {
			psels = <NRF_PSEL(UART_RX, 0, 3)>;
			bias-pull-up;
		};
		group2 {
			psels = <NRF_PSEL(UART_TX, 0, 14)>;
		};
	};

	uart1_sleep: uart1_sleep {
		group1 {
			psels = <NRF_PSEL(UART_RX, 0, 3)>,
				<NRF_PSEL(UART_TX, 0, 14)>;
			low-power-enable;
		};
	};

    spi1_default: spi1_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 27)>,
                <NRF_PSEL(SPIM_MOSI, 0, 28)>,
                <NRF_PSEL(SPIM_MISO, 0, 29)>;
        };
    };
};

/ {
    gpios {
        compatible = "gpio-keys";
        oled_cs: oled_cs {
            gpios = <&gpio0 2 GPIO_ACTIVE_HIGH>;
            label = "oled_cs";
        };
        leds_cs: leds_cs {
            gpios = <&gpio0 4 GPIO_ACTIVE_HIGH>;
            label = "leds_cs";
        };
        oled_a0: oled_a0 {
            gpios = <&gpio0 26 GPIO_ACTIVE_HIGH>;
            label = "oled_a0";
        };

        row1: row1 {
            gpios = <&gpio1 15 (GPIO_ACTIVE_HIGH)>;
            label = "row1";
        };
        row2: row2 {
            gpios = <&gpio1 14 (GPIO_ACTIVE_HIGH)>;
            label = "row2";
        };
        row3: row3 {
            gpios = <&gpio1 13 (GPIO_ACTIVE_HIGH)>;
            label = "row3";
        };
        row4: row4 {
            gpios = <&gpio1 12 (GPIO_ACTIVE_HIGH)>;
            label = "row4";
        };
        row5: row5 {
            gpios = <&gpio1 11 (GPIO_ACTIVE_HIGH)>;
            label = "row5";
        };
        row6: row6 {
            gpios = <&gpio1 10 (GPIO_ACTIVE_HIGH)>;
            label = "row6";
        };

        col1: col1 {
           gpios = <&gpio1 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
           label = "col1";
        };
        col2: col2 {
            gpios = <&gpio1 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
            label = "col2";
        };
        col3: col3 {
            gpios = <&gpio1 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
            label = "col3";
        };
        col4: col4 {
            gpios = <&gpio1 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
            label = "col4";
        };
        col5: col5 {
            gpios = <&gpio1 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
            label = "col5";
        };
        col6: col6 {
            gpios = <&gpio1 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
            label = "col6";
        };
        col7: col7 {
            gpios = <&gpio1 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
            label = "col7";
        };
        col8: col8 {
            gpios = <&gpio1 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
            label = "col8";
        };
        col9: col9 {
            gpios = <&gpio0 30 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
            label = "col9";
        };
        col10: col10 {
            gpios = <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
            label = "col10";
        };
    };
    aliases {
        oled-cs = &oled_cs;
        leds-cs = &leds_cs;
        oled-a0 = &oled_a0;
        row1 = &row1;
        row2 = &row2;
        row3 = &row3;
        row4 = &row4;
        row5 = &row5;
        row6 = &row6;
        col1 = &col1;
        col2 = &col2;
        col3 = &col3;
        col4 = &col4;
        col5 = &col5;
        col6 = &col6;
        col7 = &col7;
        col8 = &col8;
        col9 = &col9;
        col10 = &col10;
    };
};

arduino_spi: &spi3 {
	status = "disabled";
};
