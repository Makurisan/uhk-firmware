diff --git a/boot/zephyr/Kconfig.serial_recovery b/boot/zephyr/Kconfig.serial_recovery
index 52ec3b01..de877343 100644
--- a/boot/zephyr/Kconfig.serial_recovery
+++ b/boot/zephyr/Kconfig.serial_recovery
@@ -162,6 +162,13 @@ menuconfig BOOT_SERIAL_WAIT_FOR_DFU
 	  for DFU to be invoked. The serial recovery can be entered by receiving any
 	  mcumgr command.
 
+config BOOT_SERIAL_WAIT_FOR_DFU_ALWAYS
+	bool "Always enter serial recovery mode upon startup"
+	depends on BOOT_SERIAL_WAIT_FOR_DFU
+	help
+	  If y, MCUboot enters serial recovery for the duration of BOOT_SERIAL_WAIT_FOR_DFU_TIMEOUT
+	  upon physically resetting the board. Otherwise, MCUboot immediately executes the application.
+
 config BOOT_SERIAL_WAIT_FOR_DFU_TIMEOUT
 	int "Duration to wait for the serial DFU timeout in ms"
 	default 500
diff --git a/boot/zephyr/main.c b/boot/zephyr/main.c
index 27039700..688b8619 100644
--- a/boot/zephyr/main.c
+++ b/boot/zephyr/main.c
@@ -559,8 +559,12 @@ static void boot_serial_enter()
     BOOT_LOG_INF("Enter the serial recovery mode");
     rc = boot_console_init();
     __ASSERT(rc == 0, "Error initializing boot console.\n");
+#ifdef CONFIG_BOOT_SERIAL_WAIT_FOR_DFU
+    boot_serial_check_start(&boot_funcs, CONFIG_BOOT_SERIAL_WAIT_FOR_DFU_TIMEOUT);
+#else
     boot_serial_start(&boot_funcs);
     __ASSERT(0, "Bootloader serial process was terminated unexpectedly.\n");
+#endif
 }
 #endif
 
@@ -649,7 +653,7 @@ int main(void)
     }
 #endif
 
-#ifdef CONFIG_BOOT_SERIAL_WAIT_FOR_DFU
+#ifdef CONFIG_BOOT_SERIAL_WAIT_FOR_DFU_ALWAYS
     /* Initialize the boot console, so we can already fill up our buffers while
      * waiting for the boot image check to finish. This image check, can take
      * some time, so it's better to reuse thistime to already receive the
@@ -674,7 +678,7 @@ int main(void)
     }
 #endif
 
-#ifdef CONFIG_BOOT_SERIAL_WAIT_FOR_DFU
+#ifdef CONFIG_BOOT_SERIAL_WAIT_FOR_DFU_ALWAYS
     timeout_in_ms -= (k_uptime_get_32() - start);
     if( timeout_in_ms <= 0 ) {
         /* at least one check if time was expired */
