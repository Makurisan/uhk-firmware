diff --git a/boot/zephyr/Kconfig.serial_recovery b/boot/zephyr/Kconfig.serial_recovery
index c73573bb..a1a495ed 100644
--- a/boot/zephyr/Kconfig.serial_recovery
+++ b/boot/zephyr/Kconfig.serial_recovery
@@ -163,13 +163,21 @@ config BOOT_SERIAL_DETECT_DELAY
 	  the one used to place the device in bootloader mode.
 
 menuconfig BOOT_SERIAL_WAIT_FOR_DFU
-	bool "Wait a prescribed duration to see if DFU is invoked by receiving a MCUmgr comand"
+	bool "Wait a prescribed duration to see if DFU is invoked by receiving a MCUmgr command"
 	depends on BOOT_SERIAL_UART || BOOT_SERIAL_CDC_ACM
 	help
 	  If y, MCUboot waits for a prescribed duration of time to allow
 	  for DFU to be invoked. The serial recovery can be entered by receiving any
 	  mcumgr command.
 
+config BOOT_SERIAL_WAIT_FOR_DFU_ALWAYS
+	bool "Always enter serial recovery mode upon startup"
+	depends on BOOT_SERIAL_WAIT_FOR_DFU
+	help
+	  If y, MCUboot always enters serial recovery mode upon startup for the
+	  duration of BOOT_SERIAL_WAIT_FOR_DFU_TIMEOUT. Otherwise, MCUboot only
+	  enters serial recovery mode if the board was physically reset.
+
 config BOOT_SERIAL_WAIT_FOR_DFU_TIMEOUT
 	int "Duration to wait for the serial DFU timeout in ms"
 	default 500
diff --git a/boot/zephyr/main.c b/boot/zephyr/main.c
index 2c5f9afd..cbbf4ee5 100644
--- a/boot/zephyr/main.c
+++ b/boot/zephyr/main.c
@@ -525,8 +525,12 @@ static void boot_serial_enter()
     BOOT_LOG_INF("Enter the serial recovery mode");
     rc = boot_console_init();
     __ASSERT(rc == 0, "Error initializing boot console.\n");
+#ifdef CONFIG_BOOT_SERIAL_WAIT_FOR_DFU
+    boot_serial_check_start(&boot_funcs, CONFIG_BOOT_SERIAL_WAIT_FOR_DFU_TIMEOUT);
+#else
     boot_serial_start(&boot_funcs);
     __ASSERT(0, "Bootloader serial process was terminated unexpectedly.\n");
+#endif 
 }
 #endif
 
@@ -614,7 +618,7 @@ void main(void)
     }
 #endif
 
-#ifdef CONFIG_BOOT_SERIAL_WAIT_FOR_DFU
+#ifdef CONFIG_BOOT_SERIAL_WAIT_FOR_DFU_ALWAYS
     /* Initialize the boot console, so we can already fill up our buffers while
      * waiting for the boot image check to finish. This image check, can take
      * some time, so it's better to reuse thistime to already receive the
@@ -639,7 +643,7 @@ void main(void)
     }
 #endif
 
-#ifdef CONFIG_BOOT_SERIAL_WAIT_FOR_DFU
+#ifdef CONFIG_BOOT_SERIAL_WAIT_FOR_DFU_ALWAYS
     timeout_in_ms -= (k_uptime_get_32() - start);
     if( timeout_in_ms <= 0 ) {
         /* at least one check if time was expired */
